---

# the bootstrap playbook is only meant to be run once, to bootstrap, and then
# the usual playbook should be run for that server

# For linux:
# * put host into all relevant target groups, plus (temporarily) bootstrap_linux
# * bootstrapping:
#   * fiddles with shell settings
#   * sets up initial linux user accounts + ssh keys
# * initial admin user/sshkey depend on your setup image's settings
#
# ansible-playbook -u [admin user] --keyfile ~/.ssh/blah.key bootstrap.yml
# NOTE: don't need a keyfile if you have the ssh key loaded into your ssh agent

# For Windows:
# * put host into all relevant target groups, plus (temporarily) bootstrap_windows
# * bootstrapping:
#   * adds to Active Directory; users are subsequently drawn from there
#   * uses 'ntlm' protocol, suitable for local admin users
#       * other playbooks should use kerberos protocol, suitable for domain users (TODO)
# * initial local admin user/pass depend on your setup wizard's settings
#
# ansible-playbook -k bootstrap.yml
#
# NOTE: -k will ask for 'ssh password', but it will be used for winrm/nltm for i
#       the local Administrator user
#       the bootstrap playbook uses the local administrator password, other playbooks
#       use your domain user

- hosts: bootstrap_linux
  become: true
  roles:
  - bootstrap-linux
  - users


- hosts: bootstrap_windows
  vars_prompt:
  - name: win_domain_admin_user
    prompt: AD user to add machine to domain
    private: false

  - name: win_domain_admin_password
    prompt: AD password to add machine to domain

  vars:
    # vars here override group_vars
    ad_domain_ou_path: "OU=Servers,DC=staff,DC=local"
    ad_dns_domain_name: "staff.local"
    # ntlm is suitable for local admin, kerberos for domain admin users
    ansible_winrm_transport: ntlm
    ansible_user: Administrator  # local admin user
  roles:
  - active-directory

